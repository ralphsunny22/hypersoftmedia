import React, { useEffect, useState } from 'react'

import { register } from '../actions/authActions';
import { clearErrors } from '../actions/errorActions';
import { useDispatch, useSelector } from 'react-redux';

import { useNavigate, Link } from 'react-router-dom';

import Header from "../components/header";
import Footer from "../components/footer";

const Register = () => {

    const [user, setUser] = useState({
        name: "",
        email: "",
        phone_number: "",
        password: "",
        password_confirmation: ""
    })

    // const [errMsg, setErrMsg] = useState(null)
    const [nameErr, setNameErr] = useState(null)
    const [emailErr, setEmailErr] = useState(null)
    const [phoneNumberErr, setPhoneNumberErr] = useState(null)
    const [passwordErr, setPasswordErr] = useState(null)
    const [passwordConfirmationErr, setPasswordConfirmationErr] = useState(null)

    const auth = useSelector(state => state.auth)
    // const { userSuccessMsg, isAuthenticated } = auth;
    const { isAuthenticated } = auth;
    const error = useSelector(state => state.error)

    const dispatch = useDispatch()

    const topFunction = () => {
        window.scrollTo({ top: 0 });
        
      }

    //checking errors
    useEffect(() => {

        topFunction()
        
        if(error.id === 'REGISTER_FAIL'){
            // setErrMsg(error.msg.message)
            setNameErr(error.msg.errors.name && error.msg.errors.name[0])
            setEmailErr(error.msg.errors.email && error.msg.errors.email[0])
            setPhoneNumberErr(error.msg.errors.email && error.msg.errors.phone_number[0])
            setPasswordErr(error.msg.errors.password && error.msg.errors.password[0])
            setPasswordConfirmationErr(error.msg.errors.password_confirmation && error.msg.errors.password_confirmation[0])
        }
        
    }, [error])

    //submit
    const onSubmit = (e) => {
        e.preventDefault();

        dispatch(register(user));

        setUser({
            name: "",
            email: "",
            phone_number: "",
            password: "",
            password_confirmation: ""
        })

        // setErrMsg(null)
        setNameErr(null)
        setEmailErr(null)
        setPhoneNumberErr(null)
        setPasswordErr(null)
        setPasswordConfirmationErr(null)

        //clears generated by redux
        dispatch(clearErrors())
    }

    const navigate = useNavigate();

    if(isAuthenticated) return navigate("/");


    return (
        <>
          <Header homepage="not_homepage" />
        {/* contact */}
        <section className="contact section-padding" data-scroll-index="5">
            <div className="container">
                <div className="row">
    
                    <div className="section-head text-center col-sm-12">
                    
                        <h4>Register</h4>
                        <h6>Get In Touch</h6>
                    </div>
                    
                    {/* <!-- Contact Form --> */}
                    <div className="col-md-12">
                        <form className="form" id="contact-form" onSubmit={onSubmit}>
    
                            <div className="messages"></div>
    
                            <div className="controls">
    
                                <div className="row">
    
                                    <div className="col-md-6">
                                        <div className="form-group">
                                            <input id="form_name" type="text" name="name" placeholder="Full Name *" required="required"
                                                data-error="Fullname is required."
                                                value={user.name}
                                                onChange={(e) => setUser({...user, name:e.target.value})}
                                                />
                                                { nameErr && <div className="help-block with-errors text-danger">{nameErr}</div> }
                                        </div>
                                    </div>

                                    <div className="col-md-6">
                                        <div className="form-group">
                                            <input id="form_email" type="email" name="email" placeholder="Email *" required="required"
                                            data-error="Valid email is required."
                                            value={user.email}
                                            onChange={(e) => setUser({...user, email:e.target.value})}
                                            />
                                            { emailErr && <div className="help-block with-errors text-danger">{emailErr}</div> }
                                        </div>
                                    </div>

                                    <div className="col-md-6">
                                        <div className="form-group">
                                            <input id="form_message" type="number" min={0} name="phone_number" placeholder="Phone Number" required="required"
                                            value={user.phone_number}
                                            onChange={(e) => setUser({...user, phone_number:e.target.value})}
                                            />
                                            { phoneNumberErr && <div className="help-block with-errors text-danger">{phoneNumberErr}</div> }
                                        </div>
                                    </div>

                                    <div className="col-md-3">
                                        <div className="form-group">
                                            <input id="form_subject" type="password" name="password" placeholder="Password" required="required"
                                            value={user.password}
                                            onChange={(e) => setUser({...user, password:e.target.value})}
                                            />
                                            { passwordErr && <div className="help-block with-errors text-danger">{passwordErr}</div> }
                                        </div>
                                    </div>

                                    <div className="col-md-3">
                                        <div className="form-group">
                                            <input id="form_subject" type="password" name="password_confirmation" placeholder="Confirm Password" required="required"
                                            value={user.password_confirmation}
                                            onChange={(e) => setUser({...user, password_confirmation:e.target.value})}
                                            />
                                            { passwordConfirmationErr && <div className="help-block with-errors text-danger">{passwordConfirmationErr}</div> }
                                        </div>
                                    </div>

                                    <div className="col-md-12">
                                        <button type="submit" className="butn butn-bg"><span>Submit</span></button>
                                        <div className="info">
                                            <span><strong>OR</strong> Click <Link to="/login" className="bg-dark p-2 text-white">Login</Link> to Sign-In</span>
                                            
                                        </div>
                                    </div>
    
                                </div>                             
                            </div>
                        </form>
                    </div>
    
                </div>
            </div>
        </section>
    
    
    
        <Footer />
        </>
      );
}

export default Register